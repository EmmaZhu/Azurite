/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
// tslint:disable:max-line-length

import * as Models from "../artifacts/models";
import Context from "../Context";

export default interface IPageBlobHandler {
  create(contentLength: number, blobContentLength: number, containerName: string, blob: string, options: Models.PageBlobCreateOptionalParams, context: Context): Promise<Models.PageBlobCreateResponse>;
  uploadPages(body: NodeJS.ReadableStream, contentLength: number, containerName: string, blob: string, options: Models.PageBlobUploadPagesOptionalParams, context: Context): Promise<Models.PageBlobUploadPagesResponse>;
  clearPages(contentLength: number, containerName: string, blob: string, options: Models.PageBlobClearPagesOptionalParams, context: Context): Promise<Models.PageBlobClearPagesResponse>;
  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, containerName: string, blob: string, options: Models.PageBlobUploadPagesFromURLOptionalParams, context: Context): Promise<Models.PageBlobUploadPagesFromURLResponse>;
  getPageRanges(containerName: string, blob: string, options: Models.PageBlobGetPageRangesOptionalParams, context: Context): Promise<Models.PageBlobGetPageRangesResponse>;
  getPageRangesDiff(containerName: string, blob: string, options: Models.PageBlobGetPageRangesDiffOptionalParams, context: Context): Promise<Models.PageBlobGetPageRangesDiffResponse>;
  resize(blobContentLength: number, containerName: string, blob: string, options: Models.PageBlobResizeOptionalParams, context: Context): Promise<Models.PageBlobResizeResponse>;
  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, containerName: string, blob: string, options: Models.PageBlobUpdateSequenceNumberOptionalParams, context: Context): Promise<Models.PageBlobUpdateSequenceNumberResponse>;
  copyIncremental(copySource: string, containerName: string, blob: string, options: Models.PageBlobCopyIncrementalOptionalParams, context: Context): Promise<Models.PageBlobCopyIncrementalResponse>;
}
